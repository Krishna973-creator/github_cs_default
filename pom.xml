// pom.xml (add this dependency to your existing pom.xml or create a new one)
<project>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>vulnerable-java-app</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

// src/main/java/com/example/VulnerableCode.java
package com.example;

import org.apache.commons.lang3.StringEscapeUtils;

public class VulnerableCode {
    public static void main(String[] args) {
        String userInput = "<script>alert('XSS')</script>";
        // Using a function that might be flagged for potential XSS issues
        String escapedInput = StringEscapeUtils.escapeHtml4(userInput);
        System.out.println("Escaped input: " + escapedInput);

        // Potential null pointer dereference
        String potentiallyNull = System.getProperty("nonExistentProperty");
        if (potentiallyNull.length() > 5) { // Might trigger a code scanning alert
            System.out.println("Length is greater than 5");
        }
    }
}
